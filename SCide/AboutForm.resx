<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>